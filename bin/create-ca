#!/bin/bash
set -e

if [ "x$1" = "x" ]; then
    echo "Enter a working directory for the CA stuff!"
    exit 1
fi
WHERE=$1
USERNAME=$(whoami)
FULL_NAME=$(getent passwd $(whoami) | cut -d ':' -f 5 | cut -d ',' -f 1)
FQDN=$(hostname --fqdn)

openssl \
    req \
    -new \
    -nodes \
    -keyout ${FQDN}.key \
    -out ${FQDN}.csr \
    -subj "/C=US/ST=Internet/L=Internet/O=${FULL_NAME}/OU=${FQDN}/CN=${FQDN}/emailAddress=${USERNAME}@${FQDN}" \
    -days 365

SERVER_AUTH_CSR=`pwd`/${FQDN}.csr

cd ${WHERE}

mkdir private certs newcerts crl

cp /etc/ssl/openssl.cnf .
sed -i 's/dir.*=.*.\/demoCA/dir=./g' openssl.cnf


chmod 0600 openssl.cnf
touch index.txt
echo '01' > serial

ossl() {
    openssl req -config openssl.cnf "$@"
}

clear 
cowsay "Enter a secure CA password"
echo ""

ossl -new \
     -subj "/C=US/ST=Internet/L=Internet/O=${FULL_NAME}/OU=${FQDN}/CN=${FQDN}/emailAddress=${USERNAME}@${FQDN}" \
     -x509 \
     -extensions v3_ca \
     -keyout private/cakey.key \
     -out certs/cakey.crt \
     -days 1825 \

cat certs/cakey.crt private/cakey.key > private/cakey.pem
cp certs/cakey.crt ./cacert.pem

openssl ca -config openssl.cnf \
    -policy policy_anything \
    -out certs/${FQDN}.crt -infiles ${SERVER_AUTH_CSR}

sed -i 's/.*extendedKeyUsage.*/extendedKeyUsage=clientAuth/g' openssl.cnf
